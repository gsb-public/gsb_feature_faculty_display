<?php
/**
 * @file
 * Code for the GSB Feature Faculty Display feature.
 */

include_once 'gsb_feature_faculty_display.features.inc';

/**
 * Implements hook_block_info().
 */
function gsb_feature_faculty_display_block_info() {
  $blocks['az_list'] = array(
    'info' => 'A-Z list for Faculty search.',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 */
function gsb_feature_faculty_display_block_view($delta = '') {
  if ($delta == 'az_list') {
    drupal_add_js(drupal_get_path('module', 'gsb_feature_faculty_display') . '/js/gsb_feature_faculty_display.js', array('scope' => 'footer'));
    $block['subject'] = '';
    $block['content'] = '<ul class="facet-title-az"><li>' . t('All') . '</li>';
    for ($i = 65; $i <= 90; $i++) {
      $block['content'] .= '<li>';
      $block['content'] .= chr($i);
      $block['content'] .= '</li>';
    }

    $block['content'] .= '</ul>';

    return $block;
  }
}

/**
  * Implements hook_form_FORM_ID_alter().
  */
function gsb_feature_faculty_display_form_views_content_views_panes_content_type_edit_form_alter(&$form, &$form_state) {
  // Alter 'Faculty by criteria' content pane settings form.
  if ($form_state['pane']->subtype == 'faculty_filters-faculty_by_criteria'
    && $form_state['view']->name == 'faculty_filters'
    && $form_state['view']->current_display == 'faculty_by_criteria') {

    asort ($form['exposed']['filter-field_rank_value']['field_rank_value']['#options']);
    $form['display_settings']['#access'] = FALSE;
    $form['exposed']['title_help_text'] = array(
      '#prefix' => t('<div id="helptext-form">Selecting an option in more than one field displays only faculty that match all selections made.</div>'),
      '#weight' => -120);
    $form['exposed']['filter-field_academic_area_single_tid']['#prefix'] = t('<div id="helptext-title">Example: Behavioral Lab Faculty.</div>');
    $form['exposed']['filter-field_rank_value']['#prefix'] = t('<div id="helptext-rank">Selecting multiple ranks displays faculty that match at least one of the selections.</div>');
    $form['exposed']['filter-field_tag_tid']['#prefix'] = t('<div id="helptext-tag">Add only one tag per display.</div>');
    $form['fields_override']['title']['#access'] = FALSE;

    $conf = $form_state['conf'];
    $form['CTA'] = array(
      '#type' => 'fieldset',
      '#title' => t('CTA'),
    );
    $form['CTA']['cta_title'] = array(
      '#title' => t('Text'),
      '#type' => 'textfield',
      '#description' => 'Enter an action statement.',
      '#weight' => 1,
      '#default_value' => !empty($conf['cta_title']) ? $conf['cta_title'] : '',
    );
    $form['CTA']['cta_url'] = array(
      '#title' => t('URL'),
      '#type' => 'textfield',
      '#weight' => 2,
      '#default_value' => !empty($conf['cta_url']) ? $conf['cta_url'] : '',
    );

    $form['#validate'][] = 'faculty_by_criteria_pane_config_validate';
    $form['#submit'][] = 'faculty_by_criteria_pane_config_submit';
  }
}

/**
 * Submit handler for views_content_views_panes_content_type_edit_form.
 *  - Save title link field in pane config.
 */
function faculty_by_criteria_pane_config_validate($form, &$form_state) {
  if ($form_state['values']['cta_title'] != '' && $form_state['values']['cta_url'] == '') {
    form_set_error('cta_url', t('CTA Url is required.'));
  }
  if ($form_state['values']['cta_title'] == '' && $form_state['values']['cta_url'] != '') {
    form_set_error('cta_title', t('CTA title is required.'));
  }}

/**
 * Submit handler for views_content_views_panes_content_type_edit_form.
 *  - Save title link field in pane config.
 */
function faculty_by_criteria_pane_config_submit($form, &$form_state) {
  $form_state['conf']['title_link'] = $form_state['values']['title_link'];
  $form_state['conf']['cta_url'] = $form_state['values']['cta_url'];
  $form_state['conf']['cta_title'] = $form_state['values']['cta_title'];
}

/**
 * Implements hook_panels_pane_content_alter().
 *  - Alter Faculty by Criteria content pane title to be linked to a custom URL.
 */
function gsb_feature_faculty_display_panels_pane_content_alter($content, $pane, $args, $context) {
  if ($content && $content->subtype == 'faculty_filters-faculty_by_criteria') {
    if (!empty($pane->configuration['cta_title'])) {
      $url_parts = drupal_parse_url($pane->configuration['cta_url']);
      $url_parts['html'] = TRUE;
      $content->content['#markup'] .= '<div class="list-cta">' . l($pane->configuration['cta_title'], $url_parts['path'], $url_parts) . '</div>';
    }
  }
}

function gsb_feature_faculty_display_gsb_fpp_customizations_icons_alter(&$icons) {
  $module_path = drupal_get_path('module', 'gsb_feature_faculty_display');
  $icons_settings = array(
    'views_panes:faculty_filters-faculty_by_id_or_tag' => 'faculty-by-id-or-tag.jpg',
  );
  foreach($icons_settings as $key => $value) {
    if (isset($icons[$key]['icon'])) {
      $icons[$key]['icon'] = $module_path . '/images/' . $value;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for views_exposed_form.
 */
function gsb_feature_faculty_display_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if ($form_state['view']->name == 'faculty_filters' && $form_state['view']->current_display == 'faculty_list') {
    $form['#action'] = '';
    $form['secondary']['done'] = array(
      '#type' => 'submit',
      '#value' => t('Done'),
    );
    $form['secondary']['clear-all'] = array(
      '#type' => 'button',
      '#value' => t('Clear All'),
    );
  }
}